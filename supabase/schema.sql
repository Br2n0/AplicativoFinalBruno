-- Configura√ß√£o do esquema do banco de dados para o aplicativo de Tarefas Dom√©sticas

-- Tabela de categorias
CREATE TABLE IF NOT EXISTS public.categories (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    name TEXT NOT NULL,
    icon TEXT NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    user_id UUID REFERENCES auth.users(id)
);

-- Adicionar pol√≠ticas de seguran√ßa para a tabela de categorias
-- Permitir que todos os usu√°rios vejam as categorias padr√£o (sem user_id) e suas pr√≥prias categorias
CREATE POLICY "Categorias vis√≠veis para todos os usu√°rios autenticados" 
    ON public.categories FOR SELECT 
    USING (auth.uid() = user_id OR user_id IS NULL);

-- Permitir que usu√°rios criem suas pr√≥prias categorias
CREATE POLICY "Usu√°rios podem criar suas pr√≥prias categorias" 
    ON public.categories FOR INSERT 
    WITH CHECK (auth.uid() = user_id);

-- Permitir que usu√°rios atualizem suas pr√≥prias categorias
CREATE POLICY "Usu√°rios podem atualizar suas pr√≥prias categorias" 
    ON public.categories FOR UPDATE 
    USING (auth.uid() = user_id);

-- Permitir que usu√°rios excluam suas pr√≥prias categorias
CREATE POLICY "Usu√°rios podem excluir suas pr√≥prias categorias" 
    ON public.categories FOR DELETE 
    USING (auth.uid() = user_id);

-- Tabela de membros da fam√≠lia
CREATE TABLE IF NOT EXISTS public.family_members (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    name TEXT NOT NULL,
    avatar TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    user_id UUID NOT NULL REFERENCES auth.users(id)
);

-- Adicionar pol√≠ticas de seguran√ßa para a tabela de membros da fam√≠lia
-- Permitir que usu√°rios vejam seus pr√≥prios membros da fam√≠lia
CREATE POLICY "Usu√°rios podem ver seus pr√≥prios membros da fam√≠lia" 
    ON public.family_members FOR SELECT 
    USING (auth.uid() = user_id);

-- Permitir que usu√°rios criem seus pr√≥prios membros da fam√≠lia
CREATE POLICY "Usu√°rios podem criar seus pr√≥prios membros da fam√≠lia" 
    ON public.family_members FOR INSERT 
    WITH CHECK (auth.uid() = user_id);

-- Permitir que usu√°rios atualizem seus pr√≥prios membros da fam√≠lia
CREATE POLICY "Usu√°rios podem atualizar seus pr√≥prios membros da fam√≠lia" 
    ON public.family_members FOR UPDATE 
    USING (auth.uid() = user_id);

-- Permitir que usu√°rios excluam seus pr√≥prios membros da fam√≠lia
CREATE POLICY "Usu√°rios podem excluir seus pr√≥prios membros da fam√≠lia" 
    ON public.family_members FOR DELETE 
    USING (auth.uid() = user_id);

-- Tabela de tarefas
CREATE TABLE IF NOT EXISTS public.tasks (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    title TEXT NOT NULL,
    description TEXT,
    category_id UUID REFERENCES public.categories(id),
    status TEXT NOT NULL CHECK (status IN ('pending', 'in_progress', 'completed')),
    assigned_to UUID REFERENCES public.family_members(id),
    deadline TIMESTAMP WITH TIME ZONE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    user_id UUID NOT NULL REFERENCES auth.users(id)
);

-- Adicionar pol√≠ticas de seguran√ßa para a tabela de tarefas
-- Permitir que usu√°rios vejam suas pr√≥prias tarefas
CREATE POLICY "Usu√°rios podem ver suas pr√≥prias tarefas" 
    ON public.tasks FOR SELECT 
    USING (auth.uid() = user_id);

-- Permitir que usu√°rios criem suas pr√≥prias tarefas
CREATE POLICY "Usu√°rios podem criar suas pr√≥prias tarefas" 
    ON public.tasks FOR INSERT 
    WITH CHECK (auth.uid() = user_id);

-- Permitir que usu√°rios atualizem suas pr√≥prias tarefas
CREATE POLICY "Usu√°rios podem atualizar suas pr√≥prias tarefas" 
    ON public.tasks FOR UPDATE 
    USING (auth.uid() = user_id);

-- Permitir que usu√°rios excluam suas pr√≥prias tarefas
CREATE POLICY "Usu√°rios podem excluir suas pr√≥prias tarefas" 
    ON public.tasks FOR DELETE 
    USING (auth.uid() = user_id);

-- Habilitar RLS (Row Level Security) para todas as tabelas
ALTER TABLE public.categories ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.family_members ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.tasks ENABLE ROW LEVEL SECURITY;

-- Inserir categorias padr√£o (vis√≠veis para todos os usu√°rios)
INSERT INTO public.categories (name, icon, user_id) VALUES
('Limpeza', 'üßπ', NULL),
('Compras', 'üõí', NULL),
('Cozinha', 'üë®‚Äçüç≥', NULL),
('Lavanderia', 'üß∫', NULL),
('Manuten√ß√£o', 'üîß', NULL),
('Jardim', 'üå±', NULL),
('Pets', 'üêæ', NULL),
('Crian√ßas', 'üë∂', NULL),
('Finan√ßas', 'üí∞', NULL),
('Estudos', 'üìö', NULL),
('Sa√∫de', 'üíä', NULL),
('Exerc√≠cios', 'üèãÔ∏è', NULL),
('Eventos', 'üéâ', NULL),
('Tecnologia', 'üíª', NULL),
('Decora√ß√£o', 'üè†', NULL),
('Reciclagem', '‚ôªÔ∏è', NULL),
('Autom√≥vel', 'üöó', NULL),
('Pagamentos', 'üí≥', NULL),
('Outros', 'üìù', NULL)
ON CONFLICT DO NOTHING;